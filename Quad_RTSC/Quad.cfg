/*
 * Copyright (c) 2014, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * */

/*
 *  ======== helloWorld.cfg ========
 */
/* ================ BIOS Configuration ================ */
var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Boot = xdc.useModule('ti.catalog.c2800.init.Boot');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');

/*
 *  Build a custom BIOS library.
 *
 *  Since this program does not have any BIOS tasks, we remove Task
 *  from the configuration.  In order to do this, though, we cannot
 *  use the default instrumented BIOS library, so we use the custom
 *  library, which is smaller than the pre-built "instrumented" (default)
 *  and "non-instrumented" libraries.
 */
BIOS.libType = BIOS.LibType_Instrumented;
BIOS.taskEnabled = true;

var LoggingSetup = xdc.useModule('ti.uia.sysbios.LoggingSetup');

/* Make sure that only the Hello World event is logged. */
LoggingSetup.sysbiosTaskLogging = false;
BIOS.cpuFreq.lo = 90000000;
var task0Params = new Task.Params();
task0Params.instance.name = "task0";
Program.global.task0 = Task.create("&taskFxn", task0Params);
Task.enableIdleTask = true;
Boot.pllcrDIV = 18;
Clock.tickPeriod = 150;
Clock.swiPriority = 1;
var clock0Params = new Clock.Params();
clock0Params.instance.name = "clock0";
clock0Params.period = 270;
clock0Params.startFlag = true;
Program.global.clock0 = Clock.create("&getSensorData", 1, clock0Params);
